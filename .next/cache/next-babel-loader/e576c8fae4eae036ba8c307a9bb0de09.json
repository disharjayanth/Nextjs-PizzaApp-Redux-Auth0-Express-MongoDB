{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AdminLayout from '../../components/layouts/AdminLayout';\nimport authRoute from '../../components/HOC/authRoute';\nimport { connect } from 'react-redux';\nimport { UpdateAction } from '../../store/action';\n\nvar AdminSite = /*#__PURE__*/function (_Component) {\n  _inherits(AdminSite, _Component);\n\n  var _super = _createSuper(AdminSite);\n\n  function AdminSite(props) {\n    var _this;\n\n    _classCallCheck(this, AdminSite);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      _this.props.dispatch(UpdateSite(_this.state)).then(function () {\n        if (_this.props.admin.site.update) {\n          _this.setState({\n            update: true\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              update: false\n            });\n          }, 2000);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAddress\", function (e) {\n      _this.setState({\n        address: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEmail\", function (e) {\n      _this.setState({\n        email: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePhone\", function (e) {\n      _this.setState({\n        phone: e.target.value\n      });\n    });\n\n    var _props$siteData = props.siteData,\n        address = _props$siteData.address,\n        email = _props$siteData.email,\n        phone = _props$siteData.phone;\n    _this.state = {\n      address: address,\n      email: email,\n      phone: phone,\n      update: true\n    };\n    return _this;\n  }\n\n  _createClass(AdminSite, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var form = this.state;\n      return __jsx(AdminLayout, {\n        sectionName: \"Site Data\"\n      }, __jsx(\"form\", {\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Address\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.handleAddress(e);\n        },\n        value: form.address\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Email\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.handleEmail(e);\n        },\n        value: form.email\n      })), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", null, \"Phone\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        onChange: function onChange(e) {\n          return _this2.handlePhone(e);\n        },\n        value: form.phone\n      })), __jsx(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\"\n      }, \"Submit\"), form.update ? __jsx(\"div\", {\n        className: \"update\"\n      }, \"Updated\") : null));\n    }\n  }]);\n\n  return AdminSite;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    admin: state.admin\n  };\n}\n\nexport default connect(mapStateToProps)(authRoute(AdminSite));","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/admin/site.js"],"names":["React","Component","AdminLayout","authRoute","connect","UpdateAction","AdminSite","props","e","preventDefault","dispatch","UpdateSite","state","then","admin","site","update","setState","setTimeout","address","target","value","email","phone","siteData","form","handleSubmit","handleAddress","handleEmail","handlePhone","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AdminLayout from '../../components/layouts/AdminLayout'\nimport authRoute from '../../components/HOC/authRoute'\n\nimport { connect } from 'react-redux'\nimport { UpdateAction } from '../../store/action'\n\nclass AdminSite extends Component {\n    constructor(props) {\n        super(props)\n        \n        const { siteData: { address, email, phone} } = props\n\n        this.state = {\n            address: address ,\n            email: email ,\n            phone: phone ,\n            update: true\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.dispatch(UpdateSite(this.state)).then(() => {\n            if(this.props.admin.site.update) {\n                this.setState({\n                    update: true\n                })\n                setTimeout(() => {\n                    this.setState({ update: false })\n                }, 2000)\n            }\n        })\n    }\n\n    handleAddress = (e) => {\n        this.setState({\n            address: e.target.value\n        })\n    }\n\n    handleEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhone = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    render() {\n        const form = this.state\n        return(\n            <AdminLayout sectionName=\"Site Data\">\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <label>Address</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={(e) => this.handleAddress(e)}\n                            value={form.address}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Email</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={(e) => this.handleEmail(e)}\n                            value={form.email}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Phone</label>\n                        <input \n                            type=\"text\"\n                            className=\"form-control\"\n                            onChange={(e) => this.handlePhone(e)}\n                            value={form.phone}\n                        />\n                    </div>\n\n                    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n\n                    {\n                        form.update \n                        ?\n                        <div className=\"update\">\n                            Updated\n                        </div>\n                        :\n                        null\n                    }\n\n                </form>\n            </AdminLayout>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        admin: state.admin\n    }\n}\n\nexport default connect(mapStateToProps)(authRoute(AdminSite))"]},"metadata":{},"sourceType":"module"}