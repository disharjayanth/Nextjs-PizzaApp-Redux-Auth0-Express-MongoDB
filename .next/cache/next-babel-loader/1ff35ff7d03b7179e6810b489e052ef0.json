{"ast":null,"code":"import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { SEND_MESSAGE, CLEAR_MESSAGE, UPD_SITE, DELETE_MESSAGE } from '../types';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar URL = \"\".concat(publicRuntimeConfig.base_url);\nexport function SendMessage(data) {\n  var request = axios({\n    method: 'POST',\n    url: \"\".concat(URL, \"/api/v1/messages\"),\n    data: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(function (response) {\n    return response.data;\n  });\n  return {\n    type: SEND_MESSAGE,\n    payload: request\n  };\n}\n_c = SendMessage;\nexport function ClearMessage() {\n  return {\n    type: CLEAR_MESSAGE,\n    payload: null\n  };\n}\n_c2 = ClearMessage;\nexport function UpdateSite(data) {\n  var request = axios({\n    method: 'PATCH',\n    url: \"\".concat(URL, \"/api/v1/site\"),\n    data: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': \"Bearer \".concat(Cookies.getJSON('x-jwt'))\n    }\n  }).then(function (response) {\n    return response.data;\n  });\n  return {\n    type: UPD_SITE,\n    payload: request\n  };\n}\n_c3 = UpdateSite;\nexport function DeleteMessage(id) {\n  var request = axios({\n    method: 'DELETE',\n    url: \"\".concat(URL, \"/api/v1/messages\"),\n    data: JSON.stringify({\n      id: id\n    }),\n    headers: {\n      'Content-Type': 'application/json',\n      'authorization': \"Bearer \".concat(Cookies.getJSON('x-jwt'))\n    }\n  }).then(function (response) {\n    return response.data;\n  });\n  return {\n    type: DELETE_MESSAGE,\n    payload: request\n  };\n}\n_c4 = DeleteMessage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"ClearMessage\");\n$RefreshReg$(_c3, \"UpdateSite\");\n$RefreshReg$(_c4, \"DeleteMessage\");","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/store/action/index.js"],"names":["axios","Cookies","SEND_MESSAGE","CLEAR_MESSAGE","UPD_SITE","DELETE_MESSAGE","getConfig","publicRuntimeConfig","URL","base_url","SendMessage","data","request","method","url","JSON","stringify","headers","then","response","type","payload","ClearMessage","UpdateSite","getJSON","DeleteMessage","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACIC,YADJ,EAEIC,aAFJ,EAGIC,QAHJ,EAIIC,cAJJ,QAKO,UALP;AAOA,OAAOC,SAAP,MAAsB,aAAtB;;iBACgCA,SAAS,E;IAAjCC,mB,cAAAA,mB;;AAER,IAAMC,GAAG,aAAMD,mBAAmB,CAACE,QAA1B,CAAT;AAEA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA0B;AAE7B,MAAMC,OAAO,GAAGZ,KAAK,CAAC;AAClBa,IAAAA,MAAM,EAAC,MADW;AAElBC,IAAAA,GAAG,YAAIN,GAAJ,qBAFe;AAGlBG,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAHY;AAIlBM,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJS,GAAD,CAAL,CAKbC,IALa,CAKP,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACR,IAAb;AAAA,GALD,CAAhB;AAQA,SAAO;AACHS,IAAAA,IAAI,EAAClB,YADF;AAEHmB,IAAAA,OAAO,EAAET;AAFN,GAAP;AAKH;KAfeF,W;AAiBhB,OAAO,SAASY,YAAT,GAAuB;AAC1B,SAAO;AACHF,IAAAA,IAAI,EAACjB,aADF;AAEHkB,IAAAA,OAAO,EAAE;AAFN,GAAP;AAIH;MALeC,Y;AAOhB,OAAO,SAASC,UAAT,CAAoBZ,IAApB,EAAyB;AAE5B,MAAMC,OAAO,GAAGZ,KAAK,CAAC;AAClBa,IAAAA,MAAM,EAAC,OADW;AAElBC,IAAAA,GAAG,YAAIN,GAAJ,iBAFe;AAGlBG,IAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf,CAHY;AAIlBM,IAAAA,OAAO,EAAC;AACJ,sBAAe,kBADX;AAEJ,wCAA0BhB,OAAO,CAACuB,OAAR,CAAgB,OAAhB,CAA1B;AAFI;AAJU,GAAD,CAAL,CAQbN,IARa,CAQP,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACR,IAAb;AAAA,GARD,CAAhB;AAWA,SAAO;AACHS,IAAAA,IAAI,EAAEhB,QADH;AAEHiB,IAAAA,OAAO,EAAET;AAFN,GAAP;AAIH;MAjBeW,U;AAmBhB,OAAO,SAASE,aAAT,CAAuBC,EAAvB,EAA0B;AAE7B,MAAMd,OAAO,GAAGZ,KAAK,CAAC;AAClBa,IAAAA,MAAM,EAAC,QADW;AAElBC,IAAAA,GAAG,YAAIN,GAAJ,qBAFe;AAGlBG,IAAAA,IAAI,EAACI,IAAI,CAACC,SAAL,CAAe;AAACU,MAAAA,EAAE,EAACA;AAAJ,KAAf,CAHa;AAIlBT,IAAAA,OAAO,EAAC;AACJ,sBAAe,kBADX;AAEJ,wCAA0BhB,OAAO,CAACuB,OAAR,CAAgB,OAAhB,CAA1B;AAFI;AAJU,GAAD,CAAL,CAQbN,IARa,CAQP,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACR,IAAb;AAAA,GARD,CAAhB;AAUA,SAAO;AACHS,IAAAA,IAAI,EAACf,cADF;AAEHgB,IAAAA,OAAO,EAACT;AAFL,GAAP;AAKH;MAjBea,a","sourcesContent":["import axios from 'axios';\nimport Cookies from 'js-cookie';\nimport {\n    SEND_MESSAGE,\n    CLEAR_MESSAGE,\n    UPD_SITE,\n    DELETE_MESSAGE\n} from '../types';\n\nimport getConfig from 'next/config';\nconst { publicRuntimeConfig } = getConfig();\n\nconst URL = `${publicRuntimeConfig.base_url}`;\n\nexport function SendMessage(data){\n\n    const request = axios({\n        method:'POST',\n        url:`${URL}/api/v1/messages`,\n        data: JSON.stringify(data),\n        headers: { 'Content-Type': 'application/json'}\n    }).then( response => response.data )\n\n\n    return {\n        type:SEND_MESSAGE,\n        payload: request\n    }\n\n}\n\nexport function ClearMessage(){\n    return {\n        type:CLEAR_MESSAGE,\n        payload: null\n    }\n}\n\nexport function UpdateSite(data){\n\n    const request = axios({\n        method:'PATCH',\n        url:`${URL}/api/v1/site`,\n        data: JSON.stringify(data),\n        headers:{\n            'Content-Type':'application/json',\n            'authorization':`Bearer ${Cookies.getJSON('x-jwt')}`\n        }\n    }).then( response => response.data)\n\n\n    return {\n        type: UPD_SITE,\n        payload: request\n    }\n}\n\nexport function DeleteMessage(id){\n\n    const request = axios({\n        method:'DELETE',\n        url:`${URL}/api/v1/messages`,\n        data:JSON.stringify({id:id}),\n        headers:{\n            'Content-Type':'application/json',\n            'authorization':`Bearer ${Cookies.getJSON('x-jwt')}`\n        }\n    }).then( response => response.data )\n\n    return {\n        type:DELETE_MESSAGE,\n        payload:request\n    }\n\n}"]},"metadata":{},"sourceType":"module"}