{"ast":null,"code":"var _jsxFileName = \"/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/contact.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\n\nclass Contact extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleSubmit\", (values, actions) => {\n      console.log(values);\n      actions.setSubmitting(false);\n      actions.resetForm();\n    });\n\n    _defineProperty(this, \"handleRules\", values => {\n      let errors = {};\n\n      for (let prop in values) {\n        if (!values[prop]) {\n          errors[prop] = `${prop[0].toUpperCase()} is required. Please enter.`;\n        }\n      }\n\n      let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!reg.test(values.email)) {\n        errors.email = \"Not a valid email.\";\n      }\n\n      return errors;\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"title_page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, \"Contact Us\")), __jsx(\"div\", {\n      className: \"content_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }\n    }, __jsx(\"div\", {\n      className: \"inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, \"Feel free to contact us\"), __jsx(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      validate: values => this.handleRules(values),\n      onSubmit: (values, actions) => this.handleSubmit(values, actions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, ({\n      errors,\n      values,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      isSubmitting,\n      touched\n    }) => {\n      return __jsx(\"form\", {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }\n      }, \"Name\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        placeholder: \"Please enter your name here\",\n        value: values.name,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 41\n        }\n      }), errors.name && touched.name ? __jsx(\"div\", {\n        className: \"error_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 41\n        }\n      }, errors.name) : null), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 41\n        }\n      }, \"Email\"), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        placeholder: \"Please enter your email here\",\n        value: values.email,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 41\n        }\n      }), errors.email && touched.email ? __jsx(\"div\", {\n        className: \"error_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 41\n        }\n      }, errors.email) : null), __jsx(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 41\n        }\n      }, \"Write a message here\"), __jsx(\"textarea\", {\n        className: \"form-control\",\n        name: \"message\",\n        placeholder: \"Please enter your message here\",\n        value: values.message,\n        onBlur: handleBlur,\n        onChange: handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }), errors.message && touched.message ? __jsx(\"div\", {\n        className: \"error_label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }\n      }, errors.message) : null), __jsx(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 37\n        }\n      }, \"Submit\"));\n    }))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/contact.js"],"names":["React","Component","Formik","Contact","values","actions","console","log","setSubmitting","resetForm","errors","prop","toUpperCase","reg","test","email","render","name","message","handleRules","handleSubmit","handleChange","handleBlur","isSubmitting","touched"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAEA,MAAMC,OAAN,SAAsBF,SAAtB,CAAgC;AAAA;AAAA;;AAAA,0CAEb,CAACG,MAAD,EAASC,OAAT,KAAqB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,MAAAA,OAAO,CAACG,aAAR,CAAsB,KAAtB;AACAH,MAAAA,OAAO,CAACI,SAAR;AACH,KAN2B;;AAAA,yCAQbL,MAAD,IAAY;AACtB,UAAIM,MAAM,GAAG,EAAb;;AAEA,WAAI,IAAIC,IAAR,IAAgBP,MAAhB,EAAwB;AACpB,YAAG,CAACA,MAAM,CAACO,IAAD,CAAV,EAAkB;AACdD,UAAAA,MAAM,CAACC,IAAD,CAAN,GAAgB,GAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,EAAsB,6BAAxC;AACH;AACJ;;AAED,UAAIC,GAAG,GAAG,wJAAV;;AAEA,UAAG,CAACA,GAAG,CAACC,IAAJ,CAASV,MAAM,CAACW,KAAhB,CAAJ,EAA4B;AACxBL,QAAAA,MAAM,CAACK,KAAP,GAAe,oBAAf;AACH;;AAED,aAAOL,MAAP;AACH,KAxB2B;AAAA;;AA0B5BM,EAAAA,MAAM,GAAG;AACL,WACI,4BACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADH,CADD,EAIC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI,MAAC,MAAD;AACA,MAAA,aAAa,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYF,QAAAA,KAAK,EAAE,EAAnB;AAAuBG,QAAAA,OAAO,EAAE;AAAhC,OADf;AAEA,MAAA,QAAQ,EAAId,MAAD,IAAY,KAAKe,WAAL,CAAiBf,MAAjB,CAFvB;AAGA,MAAA,QAAQ,EAAG,CAACA,MAAD,EAASC,OAAT,KAAqB,KAAKe,YAAL,CAAkBhB,MAAlB,EAA0BC,OAA1B,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKM,CAAC;AAAEK,MAAAA,MAAF;AAAUN,MAAAA,MAAV;AAAkBiB,MAAAA,YAAlB;AAAgCC,MAAAA,UAAhC;AAA4CF,MAAAA,YAA5C;AAA0DG,MAAAA,YAA1D;AAAwEC,MAAAA;AAAxE,KAAD,KAAuF;AACrF,aACI;AAAM,QAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,SAAS,EAAC,cAFV;AAGA,QAAA,IAAI,EAAC,MAHL;AAIA,QAAA,WAAW,EAAC,6BAJZ;AAKA,QAAA,KAAK,EAAEhB,MAAM,CAACa,IALd;AAMA,QAAA,MAAM,EAAEK,UANR;AAOA,QAAA,QAAQ,EAAED,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAWMX,MAAM,CAACO,IAAP,IAAeO,OAAO,CAACP,IAAvB,GAEF;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,MAAM,CAACO,IADZ,CAFE,GAMF,IAjBJ,CAFJ,EAuBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,SAAS,EAAC,cAFV;AAGA,QAAA,IAAI,EAAC,OAHL;AAIA,QAAA,WAAW,EAAC,8BAJZ;AAKA,QAAA,KAAK,EAAEb,MAAM,CAACW,KALd;AAMA,QAAA,MAAM,EAAEO,UANR;AAOA,QAAA,QAAQ,EAAED,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAWMX,MAAM,CAACK,KAAP,IAAgBS,OAAO,CAACT,KAAxB,GAEF;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKL,MAAM,CAACK,KADZ,CAFE,GAMF,IAjBJ,CAvBJ,EA4CI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AACA,QAAA,SAAS,EAAC,cADV;AAEA,QAAA,IAAI,EAAC,SAFL;AAGA,QAAA,WAAW,EAAC,gCAHZ;AAIA,QAAA,KAAK,EAAEX,MAAM,CAACc,OAJd;AAKA,QAAA,MAAM,EAAEI,UALR;AAMA,QAAA,QAAQ,EAAED,YANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUMX,MAAM,CAACQ,OAAP,IAAkBM,OAAO,CAACN,OAA1B,GAEF;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,MAAM,CAACQ,OADZ,CAFE,GAMF,IAhBJ,CA5CJ,EAgEI;AACA,QAAA,IAAI,EAAC,QADL;AAEA,QAAA,SAAS,EAAC,iBAFV;AAGA,QAAA,QAAQ,EAAEK,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhEJ,CADJ;AA0EH,KAhFL,CAFJ,CADH,CAJD,CADJ;AA8FH;;AAzH2B;;AA4HhC,eAAepB,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\n\nclass Contact extends Component {\n\n    handleSubmit = (values, actions) => {\n        console.log(values)\n        actions.setSubmitting(false)\n        actions.resetForm()\n    }\n\n    handleRules = (values) => {\n        let errors = {}\n\n        for(let prop in values) {\n            if(!values[prop]) {\n                errors[prop] = `${prop[0].toUpperCase()} is required. Please enter.`\n            }\n        }\n\n        let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n        if(!reg.test(values.email)) {\n            errors.email = \"Not a valid email.\"\n        }\n\n        return errors\n    }\n\n    render() {\n        return (\n            <>\n             <div className=\"title_page\">\n                <h1>Contact Us</h1>\n             </div>\n             <div className=\"content_wrapper\">\n                <div className=\"inner\">\n                    <h1>Feel free to contact us</h1>\n                    <Formik\n                    initialValues={{ name: '', email: '', message: '' }}\n                    validate={ (values) => this.handleRules(values) }\n                    onSubmit={ (values, actions) => this.handleSubmit(values, actions) }\n                    >\n                        { ({ errors, values, handleChange, handleBlur, handleSubmit, isSubmitting, touched }) => {\n                            return(\n                                <form onSubmit={handleSubmit}>\n\n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        placeholder=\"Please enter your name here\"\n                                        value={values.name}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        />\n                                        { errors.name && touched.name \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.name}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Email</label>\n                                        <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        placeholder=\"Please enter your email here\"\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        />\n                                        { errors.email && touched.email \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.email}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Write a message here</label>\n                                        <textarea \n                                        className=\"form-control\"\n                                        name=\"message\"\n                                        placeholder=\"Please enter your message here\"\n                                        value={values.message}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        ></textarea>\n                                        { errors.message && touched.message \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.message}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"\n                                    disabled={isSubmitting}\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </div>\n             </div>\n            </>\n        )\n    }\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}