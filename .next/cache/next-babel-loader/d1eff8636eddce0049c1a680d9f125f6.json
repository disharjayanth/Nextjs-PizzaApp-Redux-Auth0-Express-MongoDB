{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport authRoute from '../../components/HOC/authRoute';\nimport AdminLayout from '../../components/layouts/adminLayout';\nimport { getCookies } from '../../lib/utils';\nimport { connect } from 'react-redux';\nimport { DeleteMessage } from '../../store/actions/index';\nimport getConfig from 'next/config';\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nclass AdminMessages extends Component {\n  static async getInitialProps({\n    req\n  }) {\n    let messagesData;\n    let reqCook = getCookies(req);\n\n    try {\n      const response = await axios.get(`${publicRuntimeConfig.base_url}/api/v1/messages`, {\n        headers: {\n          'authorization': `Bearer ${reqCook}`\n        }\n      });\n      messagesData = response.data;\n    } catch (error) {\n      console.log(error);\n    }\n\n    return {\n      messagesData\n    };\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"deleteMsgHandler\", _id => {\n      this.props.dispatch(DeleteMessage(_id)).then(() => {\n        this.setState({\n          messages: this.props.msg.messages\n        });\n      });\n    });\n\n    _defineProperty(this, \"showMessages\", messages => messages ? messages.map(message => __jsx(\"div\", {\n      className: \"item\",\n      key: message._id\n    }, __jsx(\"div\", {\n      className: \"delete_btn\",\n      onClick: () => this.deleteMsgHandler(message._id)\n    }, \"X\"), __jsx(\"div\", {\n      className: \"tag\"\n    }, __jsx(\"span\", null, \"Name:\"), message.name), __jsx(\"div\", {\n      className: \"tag\"\n    }, __jsx(\"span\", null, \"Email:\"), message.email), __jsx(\"div\", {\n      className: \"msg_wrap\"\n    }, __jsx(\"div\", {\n      className: \"tag\"\n    }, __jsx(\"span\", null, \"Message:\")), __jsx(\"div\", null, message.message)))) : null);\n\n    this.state = {\n      messages: this.props.messagesData\n    };\n  }\n\n  render() {\n    return __jsx(AdminLayout, {\n      sectionName: \"Message\"\n    }, __jsx(\"div\", {\n      className: \"messages_container\"\n    }, this.showMessages(this.state.messages)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    msg: state.msg\n  };\n};\n\nexport default connect(mapStateToProps)(authRoute(AdminMessages));","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/admin/messages.js"],"names":["React","Component","axios","authRoute","AdminLayout","getCookies","connect","DeleteMessage","getConfig","publicRuntimeConfig","AdminMessages","getInitialProps","req","messagesData","reqCook","response","get","base_url","headers","data","error","console","log","constructor","props","_id","dispatch","then","setState","messages","msg","map","message","deleteMsgHandler","name","email","state","render","showMessages","mapStateToProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AAEA,SAASC,UAAT,QAA2B,iBAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,SAAS,EAAzC;;AAGA,MAAME,aAAN,SAA4BT,SAA5B,CAAsC;AAClC,eAAaU,eAAb,CAA6B;AAACC,IAAAA;AAAD,GAA7B,EAAmC;AAC/B,QAAIC,YAAJ;AACA,QAAIC,OAAO,GAAGT,UAAU,CAACO,GAAD,CAAxB;;AAEA,QAAI;AACC,YAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEP,mBAAmB,CAACQ,QAAS,kBAA1C,EAA4D;AAC/EC,QAAAA,OAAO,EAAC;AACJ,2BAAiB,UAASJ,OAAQ;AAD9B;AADuE,OAA5D,CAAvB;AAKAD,MAAAA,YAAY,GAAGE,QAAQ,CAACI,IAAxB;AACJ,KAPD,CAOE,OAAOC,KAAP,EAAa;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAED,WAAO;AACHP,MAAAA;AADG,KAAP;AAGH;;AAGDU,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,8CAQEC,GAAD,IAAS;AACxB,WAAKD,KAAL,CAAWE,QAAX,CAAoBnB,aAAa,CAACkB,GAAD,CAAjC,EAAwCE,IAAxC,CAA6C,MAAI;AAC7C,aAAKC,QAAL,CAAc;AACVC,UAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,GAAX,CAAeD;AADf,SAAd;AAGH,OAJD;AAKH,KAdiB;;AAAA,0CAgBFA,QAAD,IACXA,QAAQ,GACJA,QAAQ,CAACE,GAAT,CAAcC,OAAD,IACT;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,OAAO,CAACP;AAAnC,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAG,MAAM,KAAKQ,gBAAL,CAAsBD,OAAO,CAACP,GAA9B;AAA5C,WADJ,EAII;AAAK,MAAA,SAAS,EAAC;AAAf,OAAqB,4BAArB,EAAwCO,OAAO,CAACE,IAAhD,CAJJ,EAKI;AAAK,MAAA,SAAS,EAAC;AAAf,OAAqB,6BAArB,EAAyCF,OAAO,CAACG,KAAjD,CALJ,EAMI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI;AAAK,MAAA,SAAS,EAAC;AAAf,OAAqB,+BAArB,CADJ,EAEI,mBACKH,OAAO,CAACA,OADb,CAFJ,CANJ,CADJ,CADI,GAgBP,IAjCa;;AAGd,SAAKI,KAAL,GAAa;AACTP,MAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWX;AADZ,KAAb;AAGH;;AA+BDwB,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,WAAD;AACI,MAAA,WAAW,EAAC;AADhB,OAGI;AAAK,MAAA,SAAS,EAAC;AAAf,OACM,KAAKC,YAAL,CAAkB,KAAKF,KAAL,CAAWP,QAA7B,CADN,CAHJ,CADJ;AASH;;AArEiC;;AAwEtC,MAAMU,eAAe,GAAIH,KAAD,IAAU;AAC9B,SAAO;AACHN,IAAAA,GAAG,EAAEM,KAAK,CAACN;AADR,GAAP;AAGH,CAJD;;AAMA,eAAexB,OAAO,CAACiC,eAAD,CAAP,CAAyBpC,SAAS,CAACO,aAAD,CAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport authRoute from '../../components/HOC/authRoute';\nimport AdminLayout from '../../components/layouts/adminLayout';\n\nimport { getCookies } from '../../lib/utils';\n\nimport { connect } from 'react-redux';\nimport { DeleteMessage } from '../../store/actions/index';\n\nimport getConfig from 'next/config';\nconst { publicRuntimeConfig } = getConfig();\n\n\nclass AdminMessages extends Component {\n    static async getInitialProps({req}){\n        let messagesData;\n        let reqCook = getCookies(req);\n\n        try {\n             const response = await axios.get(`${publicRuntimeConfig.base_url}/api/v1/messages`,{\n                 headers:{\n                     'authorization':`Bearer ${reqCook}`\n                 }\n             });\n             messagesData = response.data;\n        } catch (error){\n            console.log(error)\n        }\n\n        return {\n            messagesData\n        }\n    }\n\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            messages: this.props.messagesData\n        }\n    }\n\n    deleteMsgHandler = (_id) => {\n        this.props.dispatch(DeleteMessage(_id)).then(()=>{\n            this.setState({\n                messages: this.props.msg.messages\n            })\n        })\n    }\n\n    showMessages = (messages) => (\n        messages ?\n            messages.map((message)=>(\n                <div className=\"item\" key={message._id}>\n                    <div className=\"delete_btn\" onClick={ () => this.deleteMsgHandler(message._id)}>\n                        X\n                    </div>\n                    <div className=\"tag\"><span>Name:</span>{message.name}</div>\n                    <div className=\"tag\"><span>Email:</span>{message.email}</div>\n                    <div className=\"msg_wrap\">\n                        <div className=\"tag\"><span>Message:</span></div>\n                        <div>\n                            {message.message}\n                        </div>\n                    </div>\n                </div>\n            ))\n        :null\n    )\n\n\n    render(){\n        return(\n            <AdminLayout\n                sectionName=\"Message\"\n            >\n                <div className=\"messages_container\">\n                    { this.showMessages(this.state.messages)}\n                </div>\n            </AdminLayout>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        msg: state.msg\n    }\n}\n\nexport default connect(mapStateToProps)(authRoute(AdminMessages));"]},"metadata":{},"sourceType":"module"}