{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/contact.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\n\nvar Contact = /*#__PURE__*/function (_Component) {\n  _inherits(Contact, _Component);\n\n  var _super = _createSuper(Contact);\n\n  function Contact() {\n    var _this;\n\n    _classCallCheck(this, Contact);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (values, actions) {\n      console.log(values);\n      actions.isSubmitting(false);\n      actions.resetForm();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRules\", function (values) {\n      var errors = {};\n\n      for (var prop in values) {\n        if (!values[prop]) {\n          errors[prop] = \"\".concat(prop, \" is required. Please enter.\");\n        }\n      }\n\n      var reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (!reg.test(values.email)) {\n        errors.email = \"Not a valid email.\";\n      }\n\n      return errors;\n    });\n\n    return _this;\n  }\n\n  _createClass(Contact, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(\"div\", {\n        className: \"title_page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"Contact Us\")), __jsx(\"div\", {\n        className: \"content_wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }\n      }, __jsx(\"div\", {\n        className: \"inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, \"Feel free to contact us\"), __jsx(Formik, {\n        initialValues: {\n          name: '',\n          email: '',\n          message: ''\n        },\n        validate: function validate(values) {\n          return _this2.handleRules(values);\n        },\n        onSubmit: function onSubmit(values, actions) {\n          return _this2.handleSubmit(values, actions);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, function (_ref) {\n        var errors = _ref.errors,\n            values = _ref.values,\n            handleChange = _ref.handleChange,\n            handleBlur = _ref.handleBlur,\n            handleSubmit = _ref.handleSubmit,\n            isSubmitting = _ref.isSubmitting,\n            touched = _ref.touched;\n        return __jsx(\"form\", {\n          onSubmit: handleSubmit,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          className: \"form-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 37\n          }\n        }, __jsx(\"label\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }\n        }, \"Name\"), __jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"name\",\n          placeholder: \"Please enter your name here\",\n          value: values.name,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 41\n          }\n        }), errors.name && touched.name ? __jsx(\"div\", {\n          className: \"error_label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 41\n          }\n        }, errors.name) : null), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 37\n          }\n        }, __jsx(\"label\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }\n        }, \"Email\"), __jsx(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          name: \"email\",\n          placeholder: \"Please enter your email here\",\n          value: values.email,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 41\n          }\n        }), errors.email && touched.email ? __jsx(\"div\", {\n          className: \"error_label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 41\n          }\n        }, errors.email) : null), __jsx(\"div\", {\n          className: \"form-group\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }\n        }, __jsx(\"label\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 41\n          }\n        }, \"Write a message here\"), __jsx(\"textarea\", {\n          className: \"form-control\",\n          name: \"message\",\n          placeholder: \"Please enter your message here\",\n          value: values.message,\n          onBlur: handleBlur,\n          onChange: handleChange,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 41\n          }\n        }), errors.message && touched.message ? __jsx(\"div\", {\n          className: \"error_label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 41\n          }\n        }, errors.message) : null), __jsx(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isSubmitting,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 37\n          }\n        }, \"Submit\"));\n      }))));\n    }\n  }]);\n\n  return Contact;\n}(Component);\n\nexport default Contact;","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/pages/contact.js"],"names":["React","Component","Formik","Contact","values","actions","console","log","isSubmitting","resetForm","errors","prop","reg","test","email","name","message","handleRules","handleSubmit","handleChange","handleBlur","touched"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,QAAvB;;IAEMC,O;;;;;;;;;;;;;;;;mEAEa,UAACC,MAAD,EAASC,OAAT,EAAqB;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAC,MAAAA,OAAO,CAACG,YAAR,CAAqB,KAArB;AACAH,MAAAA,OAAO,CAACI,SAAR;AACH,K;;kEAEa,UAACL,MAAD,EAAY;AACtB,UAAIM,MAAM,GAAG,EAAb;;AAEA,WAAI,IAAIC,IAAR,IAAgBP,MAAhB,EAAwB;AACpB,YAAG,CAACA,MAAM,CAACO,IAAD,CAAV,EAAkB;AACdD,UAAAA,MAAM,CAACC,IAAD,CAAN,aAAkBA,IAAlB;AACH;AACJ;;AAED,UAAIC,GAAG,GAAG,wJAAV;;AAEA,UAAG,CAACA,GAAG,CAACC,IAAJ,CAAST,MAAM,CAACU,KAAhB,CAAJ,EAA4B;AACxBJ,QAAAA,MAAM,CAACI,KAAP,GAAe,oBAAf;AACH;;AAED,aAAOJ,MAAP;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI,4BACC;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADH,CADD,EAIC;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,EAEI,MAAC,MAAD;AACA,QAAA,aAAa,EAAE;AAAEK,UAAAA,IAAI,EAAE,EAAR;AAAYD,UAAAA,KAAK,EAAE,EAAnB;AAAuBE,UAAAA,OAAO,EAAE;AAAhC,SADf;AAEA,QAAA,QAAQ,EAAG,kBAACZ,MAAD;AAAA,iBAAY,MAAI,CAACa,WAAL,CAAiBb,MAAjB,CAAZ;AAAA,SAFX;AAGA,QAAA,QAAQ,EAAG,kBAACA,MAAD,EAASC,OAAT;AAAA,iBAAqB,MAAI,CAACa,YAAL,CAAkBd,MAAlB,EAA0BC,OAA1B,CAArB;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKM,gBAAuF;AAAA,YAApFK,MAAoF,QAApFA,MAAoF;AAAA,YAA5EN,MAA4E,QAA5EA,MAA4E;AAAA,YAApEe,YAAoE,QAApEA,YAAoE;AAAA,YAAtDC,UAAsD,QAAtDA,UAAsD;AAAA,YAA1CF,YAA0C,QAA1CA,YAA0C;AAAA,YAA5BV,YAA4B,QAA5BA,YAA4B;AAAA,YAAda,OAAc,QAAdA,OAAc;AACrF,eACI;AAAM,UAAA,QAAQ,EAAEH,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,SAAS,EAAC,cAFV;AAGA,UAAA,IAAI,EAAC,MAHL;AAIA,UAAA,WAAW,EAAC,6BAJZ;AAKA,UAAA,KAAK,EAAEd,MAAM,CAACW,IALd;AAMA,UAAA,MAAM,EAAEK,UANR;AAOA,UAAA,QAAQ,EAAED,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAWMT,MAAM,CAACK,IAAP,IAAeM,OAAO,CAACN,IAAvB,GAEF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,MAAM,CAACK,IADZ,CAFE,GAMF,IAjBJ,CAFJ,EAuBI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,SAAS,EAAC,cAFV;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,WAAW,EAAC,8BAJZ;AAKA,UAAA,KAAK,EAAEX,MAAM,CAACU,KALd;AAMA,UAAA,MAAM,EAAEM,UANR;AAOA,UAAA,QAAQ,EAAED,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAWMT,MAAM,CAACI,KAAP,IAAgBO,OAAO,CAACP,KAAxB,GAEF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,MAAM,CAACI,KADZ,CAFE,GAMF,IAjBJ,CAvBJ,EA4CI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AACA,UAAA,SAAS,EAAC,cADV;AAEA,UAAA,IAAI,EAAC,SAFL;AAGA,UAAA,WAAW,EAAC,gCAHZ;AAIA,UAAA,KAAK,EAAEV,MAAM,CAACY,OAJd;AAKA,UAAA,MAAM,EAAEI,UALR;AAMA,UAAA,QAAQ,EAAED,YANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAUMT,MAAM,CAACM,OAAP,IAAkBK,OAAO,CAACL,OAA1B,GAEF;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKN,MAAM,CAACM,OADZ,CAFE,GAMF,IAhBJ,CA5CJ,EAgEI;AACA,UAAA,IAAI,EAAC,QADL;AAEA,UAAA,SAAS,EAAC,iBAFV;AAGA,UAAA,QAAQ,EAAER,YAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhEJ,CADJ;AA0EH,OAhFL,CAFJ,CADH,CAJD,CADJ;AA8FH;;;;EAzHiBP,S;;AA4HtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Formik } from 'formik'\n\nclass Contact extends Component {\n\n    handleSubmit = (values, actions) => {\n        console.log(values)\n        actions.isSubmitting(false)\n        actions.resetForm()\n    }\n\n    handleRules = (values) => {\n        let errors = {}\n\n        for(let prop in values) {\n            if(!values[prop]) {\n                errors[prop] = `${prop} is required. Please enter.`\n            }\n        }\n\n        let reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n\n        if(!reg.test(values.email)) {\n            errors.email = \"Not a valid email.\"\n        }\n\n        return errors\n    }\n\n    render() {\n        return (\n            <>\n             <div className=\"title_page\">\n                <h1>Contact Us</h1>\n             </div>\n             <div className=\"content_wrapper\">\n                <div className=\"inner\">\n                    <h1>Feel free to contact us</h1>\n                    <Formik\n                    initialValues={{ name: '', email: '', message: '' }}\n                    validate={ (values) => this.handleRules(values) }\n                    onSubmit={ (values, actions) => this.handleSubmit(values, actions) }\n                    >\n                        { ({ errors, values, handleChange, handleBlur, handleSubmit, isSubmitting, touched }) => {\n                            return(\n                                <form onSubmit={handleSubmit}>\n\n                                    <div className=\"form-group\">\n                                        <label>Name</label>\n                                        <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"name\"\n                                        placeholder=\"Please enter your name here\"\n                                        value={values.name}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        />\n                                        { errors.name && touched.name \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.name}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Email</label>\n                                        <input \n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        name=\"email\"\n                                        placeholder=\"Please enter your email here\"\n                                        value={values.email}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        />\n                                        { errors.email && touched.email \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.email}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label>Write a message here</label>\n                                        <textarea \n                                        className=\"form-control\"\n                                        name=\"message\"\n                                        placeholder=\"Please enter your message here\"\n                                        value={values.message}\n                                        onBlur={handleBlur}\n                                        onChange={handleChange}\n                                        ></textarea>\n                                        { errors.message && touched.message \n                                        ? \n                                        <div className=\"error_label\">\n                                            {errors.message}\n                                        </div>\n                                        :\n                                        null    \n                                        }\n                                    </div>\n\n                                    <button\n                                    type=\"submit\"\n                                    className=\"btn btn-primary\"\n                                    disabled={isSubmitting}\n                                    >\n                                        Submit\n                                    </button>\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </div>\n             </div>\n            </>\n        )\n    }\n}\n\nexport default Contact"]},"metadata":{},"sourceType":"module"}