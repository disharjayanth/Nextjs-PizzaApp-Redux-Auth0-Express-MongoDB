{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport axios from 'axios';\nimport { initializeStore } from '../store';\nimport auth0Serv from '../lib/appAuth';\nconst isServer = true;\nconst __NEXT_REDUX_STATE__ = '__NEXT_REDUX_STATE__';\n\nfunction getOrCreateStore(initialState) {\n  if (isServer) {\n    return initializeStore(initialState);\n  }\n\n  if (!window[__NEXT_REDUX_STATE__]) {\n    window[__NEXT_REDUX_STATE__] = initializeStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STATE__];\n}\n\nexport default (App => {\n  return class AppWithRedux extends React.Component {\n    static async getInitialProps(appContext) {\n      let siteData;\n      let userAuth;\n      const reduxStore = getOrCreateStore();\n      appContext.ctx.reduxStore = reduxStore;\n      let appProps = {};\n\n      if (typeof App.getInitialProps === 'function') {\n        appProps = await App.getInitialProps(appContext);\n      }\n\n      try {\n        const response = await axios.get('http://localhost:3000/api/v1/site');\n        siteData = response.data[0];\n      } catch {\n        console.log('Error');\n      }\n\n      userAuth = await auth0Serv.isAuthenticated(appContext.ctx.req);\n      return _objectSpread(_objectSpread({}, appProps), {}, {\n        siteData,\n        userAuth,\n        initialReduxStore: reduxStore.getState()\n      });\n    }\n\n    constructor(props) {\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxStore);\n    }\n\n    render() {\n      return __jsx(App, _extends({}, this.props, {\n        reduxStore: this.reduxStore\n      }));\n    }\n\n  };\n});","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/lib/with-redux-store.js"],"names":["React","axios","initializeStore","auth0Serv","isServer","__NEXT_REDUX_STATE__","getOrCreateStore","initialState","window","App","AppWithRedux","Component","getInitialProps","appContext","siteData","userAuth","reduxStore","ctx","appProps","response","get","data","console","log","isAuthenticated","req","initialReduxStore","getState","constructor","props","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,MAAMC,QAAQ,OAAd;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,SAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AAEpC,MAAGH,QAAH,EAAa;AACT,WAAOF,eAAe,CAACK,YAAD,CAAtB;AACH;;AAED,MAAG,CAACC,MAAM,CAACH,oBAAD,CAAV,EAAkC;AAC9BG,IAAAA,MAAM,CAACH,oBAAD,CAAN,GAA+BH,eAAe,CAACK,YAAD,CAA9C;AACH;;AACD,SAAOC,MAAM,CAACH,oBAAD,CAAb;AACH;;AAED,gBAAgBI,GAAD,IAAS;AACpB,SAAO,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAE9C,iBAAaC,eAAb,CAA6BC,UAA7B,EAAyC;AACrC,UAAIC,QAAJ;AACA,UAAIC,QAAJ;AACA,YAAMC,UAAU,GAAGV,gBAAgB,EAAnC;AAEAO,MAAAA,UAAU,CAACI,GAAX,CAAeD,UAAf,GAA4BA,UAA5B;AAEA,UAAIE,QAAQ,GAAG,EAAf;;AACA,UAAG,OAAOT,GAAG,CAACG,eAAX,KAA+B,UAAlC,EAA8C;AAC1CM,QAAAA,QAAQ,GAAG,MAAMT,GAAG,CAACG,eAAJ,CAAoBC,UAApB,CAAjB;AACH;;AAED,UAAG;AACC,cAAMM,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,mCAAV,CAAvB;AACAN,QAAAA,QAAQ,GAAGK,QAAQ,CAACE,IAAT,CAAc,CAAd,CAAX;AACH,OAHD,CAGC,MAAM;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH;;AAEDR,MAAAA,QAAQ,GAAG,MAAMZ,SAAS,CAACqB,eAAV,CAA0BX,UAAU,CAACI,GAAX,CAAeQ,GAAzC,CAAjB;AAEA,6CACOP,QADP;AAEIJ,QAAAA,QAFJ;AAGIC,QAAAA,QAHJ;AAIIW,QAAAA,iBAAiB,EAAEV,UAAU,CAACW,QAAX;AAJvB;AAMH;;AAEDC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;AACA,WAAKb,UAAL,GAAkBV,gBAAgB,CAACuB,KAAK,CAACH,iBAAP,CAAlC;AACH;;AAEDI,IAAAA,MAAM,GAAG;AACL,aAAO,MAAC,GAAD,eAAS,KAAKD,KAAd;AAAqB,QAAA,UAAU,EAAE,KAAKb;AAAtC,SAAP;AACH;;AAtC6C,GAAlD;AAwCH,CAzCD","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { initializeStore } from '../store'\n\nimport auth0Serv from '../lib/appAuth'\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STATE__ = '__NEXT_REDUX_STATE__'\n\nfunction getOrCreateStore(initialState) {\n\n    if(isServer) {\n        return initializeStore(initialState)\n    }\n\n    if(!window[__NEXT_REDUX_STATE__]) {\n        window[__NEXT_REDUX_STATE__] = initializeStore(initialState)\n    }\n    return window[__NEXT_REDUX_STATE__]\n}\n\nexport default (App) => {\n    return class AppWithRedux extends React.Component {\n\n        static async getInitialProps(appContext) {\n            let siteData\n            let userAuth\n            const reduxStore = getOrCreateStore()\n\n            appContext.ctx.reduxStore = reduxStore\n\n            let appProps = {}\n            if(typeof App.getInitialProps === 'function') {\n                appProps = await App.getInitialProps(appContext)\n            }\n\n            try{\n                const response = await axios.get('http://localhost:3000/api/v1/site')\n                siteData = response.data[0]\n            }catch {\n                console.log('Error')\n            }\n\n            userAuth = await auth0Serv.isAuthenticated(appContext.ctx.req)\n\n            return {\n                ...appProps,\n                siteData,\n                userAuth,\n                initialReduxStore: reduxStore.getState()\n            }\n        }\n\n        constructor(props) {\n            super(props)\n            this.reduxStore = getOrCreateStore(props.initialReduxStore)\n        }\n\n        render() {\n            return <App {...this.props} reduxStore={this.reduxStore} />\n        }\n    }\n} "]},"metadata":{},"sourceType":"module"}