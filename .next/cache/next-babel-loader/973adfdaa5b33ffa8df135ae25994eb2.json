{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\nimport Cookies from 'js-cookie';\nimport { getCooksFromReq } from '../lib/utils';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Auth0 = /*#__PURE__*/function () {\n  function Auth0() {\n    _classCallCheck(this, Auth0);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-tn3cyve4.auth0.com',\n      clientID: \"\".concat(publicRuntimeConfig.client_id),\n      redirectUri: \"\".concat(publicRuntimeConfig.base_url, \"/login-success\"),\n      responseType: 'token id_token',\n      scope: 'openid'\n    });\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth0, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            _this.setSession(authResult);\n\n            resolve();\n          } else if (err) {\n            reject(err);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      Cookies.set('x-jwt-exp', expiresAt);\n      Cookies.set('x-jwt', authResult.idToken);\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      Cookies.remove('x-jwt-exp');\n      Cookies.remove('x-jwt');\n      this.auth0.logout({\n        clientID: \"\".concat(publicRuntimeConfig.client_id),\n        returnTo: \"\".concat(publicRuntimeConfig.base_url)\n      });\n    }\n  }, {\n    key: \"getJWST\",\n    value: function () {\n      var _getJWST = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, jwks;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('https://dev-tn3cyve4.auth0.com/.well-known/jwks.json');\n\n              case 2:\n                res = _context.sent;\n                jwks = res.data;\n                return _context.abrupt(\"return\", jwks);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getJWST() {\n        return _getJWST.apply(this, arguments);\n      }\n\n      return getJWST;\n    }()\n  }, {\n    key: \"certToPEM\",\n    value: function certToPEM(cert) {\n      cert = cert.match(/.{1,64}/g).join('\\n');\n      cert = \"-----BEGIN CERTIFICATE-----\\n\".concat(cert, \"\\n-----END CERTIFICATE-----\\n\");\n      return cert;\n    }\n  }, {\n    key: \"verifyToken\",\n    value: function () {\n      var _verifyToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(token) {\n        var jwks, certificate, decodedVerify, expiredAt;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!token) {\n                  _context2.next = 14;\n                  break;\n                }\n\n                _context2.next = 3;\n                return this.getJWST();\n\n              case 3:\n                jwks = _context2.sent;\n                certificate = this.certToPEM(jwks.keys[0].x5c[0]);\n                _context2.prev = 5;\n                decodedVerify = jwt.verify(token, certificate);\n                expiredAt = decodedVerify.exp * 1000;\n                return _context2.abrupt(\"return\", decodedVerify && new Date().getTime() < expiredAt ? true : false);\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](5);\n                return _context2.abrupt(\"return\", false);\n\n              case 14:\n                return _context2.abrupt(\"return\", false);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 11]]);\n      }));\n\n      function verifyToken(_x) {\n        return _verifyToken.apply(this, arguments);\n      }\n\n      return verifyToken;\n    }()\n  }, {\n    key: \"isAuthenticated\",\n    value: function () {\n      var _isAuthenticated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req) {\n        var token, verifyToken, _token, _verifyToken2;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!true) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                token = Cookies.get('x-jwt');\n                _context3.next = 4;\n                return this.verifyToken(token);\n\n              case 4:\n                verifyToken = _context3.sent;\n                return _context3.abrupt(\"return\", verifyToken);\n\n              case 8:\n                _token = getCooksFromReq(req, 'x-jwt');\n                _context3.next = 11;\n                return this.verifyToken(_token);\n\n              case 11:\n                _verifyToken2 = _context3.sent;\n                return _context3.abrupt(\"return\", _verifyToken2);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function isAuthenticated(_x2) {\n        return _isAuthenticated.apply(this, arguments);\n      }\n\n      return isAuthenticated;\n    }() // async isAuthenticated(req) {\n    //     if(process.browser) {\n    //         let expiresAt = Cookies.get('x-jwt-exp')\n    //         return new Date().getTime() < expiresAt\n    //     } else {\n    //         let expiresAt = getCooksFromReq(req, 'x-jwt-exp')\n    //         return new Date().getTime() < expiresAt\n    //     }\n    // }\n\n  }]);\n\n  return Auth0;\n}();\n\nvar auth0Serv = new Auth0();\nexport default auth0Serv;","map":{"version":3,"sources":["/Users/disharjayantha/Desktop/projects,practise/Nextjs-PizzaApp/lib/appAuth.js"],"names":["auth0","Cookies","getCooksFromReq","jwt","axios","getConfig","publicRuntimeConfig","Auth0","WebAuth","domain","clientID","client_id","redirectUri","base_url","responseType","scope","handleAuthentication","bind","isAuthenticated","Promise","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","expiresAt","JSON","stringify","expiresIn","Date","getTime","set","authorize","remove","logout","returnTo","get","res","jwks","data","cert","match","join","token","getJWST","certificate","certToPEM","keys","x5c","decodedVerify","verify","expiredAt","exp","req","verifyToken","auth0Serv"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js'\nimport Cookies from 'js-cookie'\nimport { getCooksFromReq } from '../lib/utils'\n\nimport jwt from 'jsonwebtoken'\nimport axios from 'axios'\n\nimport getConfig from 'next/config'\nconst { publicRuntimeConfig } = getConfig()\n\nclass Auth0 {\n    constructor() {\n        this.auth0 = new auth0.WebAuth({\n            domain: 'dev-tn3cyve4.auth0.com',\n            clientID: `${publicRuntimeConfig.client_id}`,\n            redirectUri: `${publicRuntimeConfig.base_url}/login-success`,\n            responseType: 'token id_token',\n            scope: 'openid'\n        })\n        this.handleAuthentication = this.handleAuthentication.bind(this);\n        this.isAuthenticated = this.isAuthenticated.bind(this)\n    }\n\n    handleAuthentication() {\n        return new Promise((resolve, reject) => {\n            this.auth0.parseHash((err, authResult) => {\n                if (authResult && authResult.accessToken && authResult.idToken) {\n                  this.setSession(authResult);\n                  resolve()\n                } else if (err) {\n                  reject(err)\n                }\n              });\n        })\n    }\n\n    setSession(authResult) {\n        let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime())\n        Cookies.set('x-jwt-exp', expiresAt)\n        Cookies.set('x-jwt', authResult.idToken)\n    }\n\n    login() {\n        this.auth0.authorize()\n    }\n\n    logout() {\n        Cookies.remove('x-jwt-exp')\n        Cookies.remove('x-jwt')\n        this.auth0.logout({\n            clientID: `${publicRuntimeConfig.client_id}`,\n            returnTo: `${publicRuntimeConfig.base_url}`\n        })\n    }\n\n    async getJWST() {\n        const res = await axios.get('https://dev-tn3cyve4.auth0.com/.well-known/jwks.json')\n        const jwks = res.data\n        return jwks\n    }\n\n    certToPEM(cert) {\n        cert = cert.match(/.{1,64}/g).join('\\n');\n        cert = `-----BEGIN CERTIFICATE-----\\n${cert}\\n-----END CERTIFICATE-----\\n`;\n        return cert;\n      }\n\n    async verifyToken(token) {\n        if(token) {\n            // const decodeToken = jwt.decode(token, { complete: true })\n            const jwks = await this.getJWST()\n\n            const certificate = this.certToPEM(jwks.keys[0].x5c[0])\n            \n            try {\n                const decodedVerify = jwt.verify(token, certificate)\n                \n                const expiredAt = decodedVerify.exp * 1000\n\n                return (decodedVerify && new Date().getTime() < expiredAt ) ? true : false\n\n            } catch{\n                return false\n            }\n        }\n        return false\n    }\n\n    async isAuthenticated(req) {\n        if(process.browser) {\n            const token = Cookies.get('x-jwt')\n            const verifyToken = await this.verifyToken(token)\n            return verifyToken\n        } else {\n            let token = getCooksFromReq(req, 'x-jwt')\n            const verifyToken = await this.verifyToken(token)\n            return verifyToken\n        }\n    }\n\n    // async isAuthenticated(req) {\n    //     if(process.browser) {\n    //         let expiresAt = Cookies.get('x-jwt-exp')\n    //         return new Date().getTime() < expiresAt\n    //     } else {\n    //         let expiresAt = getCooksFromReq(req, 'x-jwt-exp')\n    //         return new Date().getTime() < expiresAt\n    //     }\n    // }\n} \n\nconst auth0Serv = new Auth0()\nexport default auth0Serv"]},"metadata":{},"sourceType":"module"}